*** Database tables ***

users table (primary = email)
  email char(255)
  first_name char(255)
  last_name char(255)
  password char(255)
  salt char(255)

ratings table (primary = user, route_key)
  user varchar(255)
  route_key varchar(255)
  safety (INT)
  efficiency (INT)
  scenery (INT)

routes table (primary = user, route_key)
  user varchar(255)
  route_key varchar(255)
  name varchar(1000)
  from_loc varchar(1000)
  to_loc varchar(1000)
  route_index (INT)

tips_and_accidents table (primary = user, kind, id)
  user varchar(255)
  kind = INT
  id varchar(255)
  comment varchar(1000)
  x varchar(1000)
  y varchar(1000)
  flagged INT (too lazy to use bool)

************************************************

*** Operations ***
Reply is a json object with "err" field.
The other fields are valid only if err is an empty string.
If there is an error, err contains an explanation of the error.

Use either POST or GET to db.php

Debugging:
Add a verbose=1 param to get debug printout of what's happening.
e.g. http://leoliu.scripts.mit.edu/routescout/db.php?verbose=1&op=get_average_ratings

------------------------------------------------

Update Ratings (includes deleting ratings
if all three ratings are 0, delete them)

op = update_ratings
route_key = route_key (VARCHAR)
safety = 1-5 (INT)
efficiency = 1-5 (INT)
scenery = 1-5 (INT)
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=update_ratings&route_key=key&safety=0&efficiency=0&scenery=1

{"error":""}

------------------------------------------------
Saving Routes

op = save_route
route_key = route_key (VARCHAR)
name = name (VARCHAR)
from_loc = from_add (VARCHAR)
to_loc = to_addr (VARCHAR)
route_index = (INT)
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=save_route&route_key=route_key&name=name&from_loc=from&to_loc=to&route_index=5

{"error":""}

------------------------------------------------
Delete Saved Routes

op = delete_saved_route
route_key = VARCHAR
*needs to be logged in

{"error":""}

http://leoliu.scripts.mit.edu/routescout/db.php?op=delete_saved_route&route_key=route_key

------------------------------------------------
Save Tip or Accident

op = save_ta
kind = 0 (for tip), 1 (for accident) INT
id = INT (specific id for the tip)
comment = VARCHAR
x (VARCHAR)
y (VARCHAR)
flagged
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=save_ta&kind=0&id=id&comment=comment&x=x&y=y&flagged=0

{"error":""}

------------------------------------------------
Delete Tip or Accident (can do this another way perhaps)

op = delete_ta
kind = 0 (for tip), 1 (for accident) INT
id = INT
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=delete_ta&kind=0&id=id

{"error":""}

------------------------------------------------
Edit Tip or Accident

op = edit_ta
kind = 0 (for tip), 1 (for accident) INT
id = INT
comment = VARCHAR (new tip)
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=edit_ta&kind=0&id=id&comment=newcomment

{"error":""}

------------------------------------------------
Get All Tips or Accidents

op = get_all_tas
kind = 0 (for tip), 1 (for accident) INT

return list of all tips as objects:

http://leoliu.scripts.mit.edu/routescout/db.php?op=get_all_tas&kind=0

{
    "error": "",
    "data": [
        {
            "user": "kobe@mit.edu",
            "kind": "0",
            "id": "id2",
            "comment": "comment",
            "x": "x",
            "y": "y",
            "flagged": "0"
        },
        {
            "user": "kobe@mit.edu",
            "kind": "0",
            "id": "id",
            "comment": "comment",
            "x": "x",
            "y": "y",
            "flagged": "0"
        }
    ]
}

------------------------------------------------
Flag Tip or Accident (we can decide whether to use this or not) 

op = flag_ta
owner = userid that owns the tip/accident
kind = 0 (for tip), 1 (for accident) INT
id = INT
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=flag_ta&owner=kobe@mit.edu&kind=0&id=id

{"error":""}

------------------------------------------------
Get Saved Routes:

op = get_saved_routes
*needs to be logged in

Returns a list of objects:

http://leoliu.scripts.mit.edu/routescout/db.php?op=get_saved_routes

{
    "error": "",
    "data": [
        {
            "user": "kobe@mit.edu",
            "route_key": "route_key",
            "name": "name3",
            "from_loc": "from",
            "to_loc": "to",
            "route_index": "5"
        },
        {
            "user": "kobe@mit.edu",
            "route_key": "route_key1",
            "name": "name",
            "from_loc": "from",
            "to_loc": "to",
            "route_index": "5"
        }
    ]
}

------------------------------------------------
Get a particular saved route:

op = get_saved_route
route_key = route_key
*needs to be logged in

http://leoliu.scripts.mit.edu/routescout/db.php?op=get_saved_route&route_key=key

{
    "error": "",
    "data": {
        "user": "kobe@mit.edu",
        "route_key": "route_key",
        "name": "name3",
        "from_loc": "from",
        "to_loc": "to",
        "route_index": "5"
    }
}

------------------------------------------------
Get average ratings for particular route:

op = get_average_ratings
route_key

http://leoliu.scripts.mit.edu/routescout/db.php?op=get_average_ratings&route_key=key

{
    "error": "",
    "data": {
        "safety": {
            "AVG(safety)": null
        },
        "efficiency": {
            "AVG(efficiency)": null
        },
        "scenery": {
            "AVG(scenery)": "1.0000"
        }
    }
}